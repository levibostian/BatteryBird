name: Tests

on: [pull_request]

jobs: 
  jvm-tests:
    runs-on: ubuntu-latest
    permissions:
      checks: write # for junit test results parser 
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/setup-android
    - run: ./gradlew :app:testDebugUnitTest
    - name: Parse junit test results 
      uses: mikepenz/action-junit-report@v3
      if: success() || failure() # always run even if the previous step fails
      with:
        report_paths: 'app/build/test-results/test*/TEST-*.xml'
        fail_on_failure: true 
        require_tests: true 
        check_name: "Unit test results"

# Sqldelight comes with a gradle task that verifies migration files match schema for each version. 
  sql-migration-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/setup-android
    - run: ./gradlew :store:verifyCommonMainDatabaseMigration

  build-app:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/setup-android

    - name: Create production Android keystore file 
      uses: levibostian/action-random-file@main
      id: create-keystore-file
      with:
        base64-file-content: ${{ secrets.ANDROID_RELEASE_SIGNING_KEY_FILE_BASE64 }}
        file-name: "key"

    - run: ./gradlew :app:bundleRelease 
      env:
        ANDROID_SIGNING_KEY_FILE_PATH: ${{ steps.create-keystore-file.outputs.path }}
        ANDROID_SIGNING_KEY_STORE_PASSWORD: ${{ secrets.ANDROID_SIGNING_KEY_STORE_PASSWORD }}
        ANDROID_SIGNING_KEY_PASSWORD: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
    